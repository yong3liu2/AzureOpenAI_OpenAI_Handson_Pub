[
    {
        "filename": "2305.03357.pdf",
        "page_number": 1,
        "page_content": "Persistent homology of directed spaces Cameron Calk, Eric Goubault and Philippe Malbos Abstract - In this work, we explore links between natural homology and persistent homol- ogy for the classification of directed spaces. The former is an algebraic invariant of directed spaces, a semantic model of concurrent programs. The latter was developed in the context of topological data analysis, in which topological properties of point-cloud data sets are extracted while eliminating noise. In both approaches, the evolution homological properties are tracked through a sequence of inclusions of usual topological spaces. Exploiting this similarity, we show that natural homology may be considered a persistence object, and may be calculated as a colimit of uni-dimensional persistent homologies along traces. Finally, we suggest further links and avenues of future work in this direction. Keywords - Concurrent programs, semantic models, directed homotopy, persistent homol- ogy. M.S.C. 2020 - 55N31, 68Q55, 68Q85. arXiv:2305.03357v1 [math.AT] 5 May 2023 1 Introduction Geometry, algebraic topology, and homological algebra have now been in the computer science landscape through many significant applications in recent years. In topological data analysis, the shape of point-cloud data can be hinted at through suitable homological invariants, persistence homology (see e.g. [13], and [6] for a survey of the earlier days of persistence). These invariants capture the essential topological features of the point-cloud data, in that these are independent of the metrics used, are robust to noise and compact in their presentation. In the same period, similar ideas appeared in the realm of semantics of programming languages, in particular in concurrency theory [18, 17] and distributed computing [26], see e.g. [23, 16, 27] for surveys. This article makes a formal bridge between these two approaches and illustrates the interest of applying persistent homology methods to problems such as classification of potential behaviors in concurrency theory and distributed computing through motivational examples. The semantic models that describe possible executions of concurrent programs are based on the notion of directed space, which is a topological space X equipped with a topological space dX of directed paths, i.e. maps from the unit interval to X which enjoy a number of properties, see Section 4.1 and [22, 16]. For the purpose of this article, we will be exemplifying our results on directed spaces which are generated by compact partially-ordered spaces, which will furthermore be (directed) geometric realizations of finite precubical sets, see e.g. [16]. A compact partially- ordered space is a compact topological space X, together with a partial ordering \u2264 which is a closed subset of X x X with the product topology. The directed paths in X are continuous and increasing maps from the unit interval, with the standard total order, to X. A particular 1"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 2,
        "page_content": "S U S US US Figure 1: Two essentially different concurrent programs with homeomorphic state space. class of compact partially-ordered spaces is given by the geometric realization of (loop-free) finite precubical sets, in which all n-cubes are realized by the unit n-cube in R\", with the componentwise ordering. Consider now the problem of classifying such directed spaces, meaning determining when two directed spaces are \"the same\", that is, dihomeomorphic, as defined in Section 4.1, mean- ing homeomorphic as topological spaces plus some extra condition implying preservation of the directed structure. From the concurrency theory point of view, having dihomeomorphic di- rected spaces means essentially having the same coordination between concurrent processes [16], whereas non-dihomeomorphic directed spaces are the semantics of different concurrent programs. As for the classification problem of topological spaces, it is far too hard a problem as such, and we need tractable (directed) topological invariants to give witnesses of the non-existence of dihomeomorphisms. One such invariant called natural homology, is based on homology, as generally done in classical algebraic topology, and has been developed in e.g. [9]. The idea is to observe that a dihomeomorphism f induces, for all points a, 8 in X, an isomorphism f* between sub-spaces dX (a, B) of dipaths in X from a to B (see Section 4.1) in with sub-spaces dY (f(a), f(6)) of dipaths in Y from f(a) to f(6). The natural homology of directed space X is a diagram (or a \"natural system\" of groups, [1]) combining all (classical) homology groups of dX (a, B) for a and B varying over X, with induced \"extension maps\" between them. Consider for instance the two compact partially-ordered spaces within R2 with the compo- nentwise ordering pictured in Figure 1. They give semantics, for the left one X, to program U.S | U.S, and for the one on the right Y, to program U.S || S.U, where S stands for a scan operation and U stands for an update operation in shared memory, see e.g. [21]. As topological spaces, X and Y are homeomorphic spaces, homotopic to a wedge of two circles. Still, they are not dihomeomorphic directed spaces. Indeed, for a, 8 in X, dX (a, B) can only be homotopic to a point, two points or three points, whereas for 7, 8 in Y, dY (7, 8) can only be homotopic to a point, two points or four points. All these points do indeed correspond to traces of executions of the respective concurrent programs. These traces describe distinct coordination properties between two processes, and may give different outcomes. Figure 1 shows the three maximal directed paths up to directed homotopy for the space on the left, and the four maximal ones on the space on the right. Even more importantly, for any directed path u from o' to a in X and any path v from 8 to B' in X, we have a continuous map dX (u, v) from dX (a, B) to dX (a', 3') by pre-composition by u and post-composition by v, and when f is a dihomeomorphism, the graph of the homology of 2"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 3,
        "page_content": "f* is a bisimulation between the natural homology of X and the natural homology of Y. We will recap this notion in Section 4. The study of the shape of such spaces of dipaths, when moving a and B, will be the essential ingredient of invariants under directed homeomorphisms. Now, the idea of persistent homology comes from a different line, but we will see that it is based on similar intuitions. In the classical \"uni-dimensional\" approach of persistent homology of a point cloud in a space R\", we construct a filtration, i.e. a sequence of inclusions of simplicial sets. Typically, this starts on the point cloud and develops by adding relationships between the initial points resulting in a R-persistence simplicial complex, from which we extract a sequence of homological invariants. The method of filtration depends on the nature and characteristics of the point cloud , according to which one can consider Cech, Vietoris-Rips, witness filtrations ... [6]. In general these filtrations are unidimensional but there exist multidimensional analogues [7], in which multiple parameters can vary, that we will briefly discuss later on. Similarly to persistent homology, there is a natural notion of birth and death of homo- logical generators within natural homology. It is therefore natural to study the relationship between natural homology and persistent homology. For X a Euclidean cubical complex, which can be embedded as a sub-directed space of R\" for some high enough n E N, endowed with the component-wise ordering, it is natural to consider multidimensional persistence on 2n parame- ters, the n coordinates of the start point o and the n coordinates of the end point 8 and study the evolution of dX(a, B). In Section 2, we show that this point of view does not quite work using a simple example. The objective of this article is to cope with this difficulty, in order to give a meaning to natural homology as persistent homology. The shift of point of view we are going to make is similar to recent approaches in multidimensional persistence [7]. We are going to look at all unidimensional persistent homologies that are compatible with the structure of a directed space, and glue this information together. In many ways, this resembles \"probing\" approaches in multidimensional homology, see e.g. [8]. In this work, we apply this idea to concurrent programs described by directed spaces. In this context, the data which we want to study via homological persistence are not points, but traces in directed spaces, which correspond to all observable executions of some concurrent program. The directed structure of the space allows for each trace to define several one-dimensional filtrations of the associated trace space. The objective is to amalgamate all these filtrations to obtain the topological properties of the trace space. Contrary to the classical case, wherein the poset-persistence underlying the filtrations is obtained by external methods, the filtrations in the directed framework are inherent to the object of study. Apart from the theoretical bridge between seemingly different lines of work, this work is a first step toward providing more tractable ways of computing natural homology (such as rank invariants [7]), as well as giving succinct descriptions of the semantics of concurrent and distributed systems, as some sort of barcodes (see e.g. [30]), an approach which has proven very practical in different areas of engineering, see e.g. [6]. This will be developed elsewhere. Our first result, namely Proposition 1, provides the basis for this work. Indeed, it states that in the case of a partially ordered space X', which constitute a prevalent example of directed space, there exists an order relation on traces which is isomorphic to the factorisation category 3"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 4,
        "page_content": "X, which we afterwards call the trace poset P(X) of X. The latter is the domain of the natural homology functor, so in particular, Proposition 1 states that natural homology is a peristence vector space. Our next main result, Theorem 2, characterises maximal chains in the trace poset of a partially ordered space, and Proposition 2 shows that parametrisations of (maximal) traces yield unidimensional persistence modules along (maximal) chains by restriction of the natural homology functor. Finally, in order to link these unidimensional persistence modules to the full natural homology functor, we prove Propositions 3 and 4, stating that an arbitrary poset may be obtained as the colimit of the diagram of its (maximal) chains. We then apply this to functors whose domain is a poset, showing in Proposition 5 that the colimit construction along chains also applies to such functors. All of this leads to our main result, Theorem 3. This result shows that natural homology is obtained as the colimit of the unidimensional persistence modules along (maximal) traces, thereby establishing a concrete theoretical link between these two homology theories. Outline of the article. The first section presents a motivational example in order to present the relationship between persistent homology and natural homology. In particular, we argue that there is no canonical (multidimensional) filtration of the trace spaces of a given directed space which is solely based on end-points of dipaths. Indeed, we show that one must consider filtrations given by inclusions of trace spaces induced by pre- or post-concatenation by dipaths. Section 3 deals with basic notions of persistent homology, fixing the notations and making the article self-contained. We recall notions of persistence objects and persistence homology, as well as an algorithm for computing persistent homology, more details on which can be found in [6, 11, 12]. In Section 4, we recall notions from directed topology. In particular, Sections 4.1 and 4.2 recall the notions of directed space and related structure, while the notion of natural homology is recalled in 4.3. Before moving on to the main results of the article, we recall in Section4.4 the notion of bisimulation, which constitutes the appropriate notion of equivalence of natural homology modules. The first main results of the paper are developed in Section 5. First, we show by way of Proposition 1 that in the case of a partially ordered space X, the domain of the associated natural homology functor is in fact a poset P(X), thus allowing us to consider it as a persistence object. In Section 5.2, we define a unidimensional persistence module along traces in a pospace, before proving Theorem 2 and Proposition 2, relating (maximal) chains in the poset P(X) to (maximal) traces in X. These concepts are illustrated in Section 5.4 on the motivational example from Section 3, the matchbox, for which full calculations are made. The relation to the natural homology of the matchbox is described in Section 5.5. In Section 6, we show how colimit constructions permit us to \"glue\" together the unidimen- sional persistence modules obtained along traces in order to recover the entire natural homology diagram of a given pospace. First, in Section 6.1, we recall folkloric results about posets which provide various ways of reconstructing a poset as a colimit of its (maximal) chains. In Section 6.2, 4"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 5,
        "page_content": "we show via Proposition 5 that these constructions carry over to functors whose domains are posets. Finally, putting this together with results from Section 5, we obtain the main result of this article in Section 6.3, namely Theorem 3, stating that the natural homology of a pospace, or certain subdiagrams thereof, can be obtained from the uni-dimensional persistence modules along traces. Finally, Section 7 finishes up by giving hints about extensions of these results, further linking natural homology with persistence when the considered partially ordered spaces are equipped with some metric structure in Section 7.1, and giving briefly touching on algorithmic consider- ations in Section 7.2. 2 A motivational example To give a glimpse of the intimate relationship between multidimensional persistence and natural homology, let us describe our construction on the following Fahrenberg's matchbox example [14]: All faces of the unit cube [0, 1] x [0, 1] x [0, 1], except the bottom face, constitute the cubical complex, i.e. there are 5 squares glued together. A trace is the equivalence class p of a dipath p modulo monotonic and continuous reparametrization as defined in Section 4.1, and the set of such equivalence classes can be given the structure of a topological space (K)(a, b) for all start (resp. end) points a (resp. b), homotopic to a CW-complex for a large class of geometric realizations of pre-cubical sets. Using Ziemia\u0144ski's construction [35], the simplicial set corresponding to its trace space from beginning to end is as follows 1 B B 8 C \u20ac E D 5 (1) where the edges A, B, C, D and E correspond to the following five 2-dimensional cubical paths: 1 A B C D E 5"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 6,
        "page_content": "and the vertices a, 6, 7, 8, E and ( correspond to the following six 1-dimensional dipaths: (2) 5 E a 8 Y Note that 6 is the geometric intersection of B with E, y is the geometric intersection of B with A and so forth. This leads to the simplicial set pictured in (1). In order to apply persistent homology, we need to obtain a (multidimensional) filtration from this directed space, i.e. a map from some poset P such as N2 to the category of simplicial sets. One could think that such a filtration could be obtained by moving the end-points a and b associated to a trace space $(K)(a, b). However, as we illustrate below, there is no canonical way of obtaining such a filtration in general; we must use extensions along traces to define inclusion maps. There are maps from $(K)(a, b) to E(K)(a', b'), for a \u2264 a' and b' \u2264 b that act as restriction maps : they just \"cut\" the combinatorial dipaths so as to only keep the parts (if any) that go from a' to b'. Hence, we get a decreasing sequence of simplicial sets as soon as any of the three coordinates of a increase or any of the three coordinates of b decrease. Below, we have represented the part of the multidimensional filtration generated, for the vertical coordinate of b (the end point) and of a (the starting point) ; recall also that the 5 squares are here unit squares and the lower coordinates are 0, upper ones are 1. In this filtration, the restriction maps acting on combinatorial dipaths should correspond to inclusion maps from bottom to top, and from left to right, of simplicial sets representing the corresponding trace spaces. For instance, moving the end point b from vertical coordinate 1 to 0 while keeping vertical coordinate of a at 0 (right column in the table below), the only 1-dimensional paths going through coordinate 0 for b are a and , hence all other vertices (and edges) have to disappear. This induces the upwards inclusion map from the two point simplicial set (a and () into the connected simplicial set above : Ho of these simplicial sets goes from Z2 to Z, \"killing\" one component when extending paths to reach the end point of the matchbox. This corresponds, in the natural homology diagram H1(K), to part of the diagram being a projection map from Z2 to Z when moving b to the endpoint of the matchbox, while keeping the starting point fixed at the initial vertex. b/a 1 0 A Y 8 B 1 Y 8 1 B B E a C \u20ac D 5 0 \u00d8 5 6"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 7,
        "page_content": "The reason that we obtain an inclusion map from bottom to top in this case is because there is a unique map from the point (1, 1, 0) to the point (1, 1, 1). When there is a choice between maps, we no longer obtain a canonical inclusion map. Indeed, consider the case in which a = (0, 0, 0), the initial point, b' = (1, 1, 0) and b = (1, 1, 1), the terminal point. There are two extension maps from \u00a3(K)(b', b) to E(K)(a, b), one by precomposition by the trace of (, and one by precomposition by the trace of a. These will produce different homology maps once the invariant is applied. Therefore there is no canonical multidimensional filtration of the trace spaces which depends only on start and end points. More generally, it is easily seen that such a multidimensional filtration for studying a directed space X would exist only if we had a way to associate in a continuous manner, to each pair of points o and , a directed path going from a to B. It is well-known that indeed, such a continuous map will only exist if X is contractible in a directed manner, i.e. is trivial, see e.g. [19]. The objective of this article is to cope with this difficulty, in order to give a meaning to natural homology as persistence homology. The shift of point of view we are going to make is similar to recent approaches in multidimensional persistence. We are going to look at all unidimensional persistence homologies that are compatible with our directed space structure, and glue this information together. The non-canonicity of multidimensional filtrations, due to the existence in general of multiple extensions between trace spaces, we will no longer be considering filtrations parametrised by beginning- and end-points, but which are generated by extensions along a given trace. These have a natural interpretation as uni-dimensional persistence modules and are closely related to the structure of the directed space in question. 3 A sketch of persistence In this section we recall the definitions of persistence homology using the notion of persistence module from [36]. We recall also an algorithm for computing persistent homology based on a structure theorem on persistence [36]. We refer the reader to [6, 11, 12] for complete accounts of persistent homology. 3.1 Persistence complexes Given a poset P, considered as a category, a P-persistence object in a category C is a functor Q : P -> C. Explicitly, it is given by a collection {Cxfx of objects in C indexed by the elements of P, and such that for all x < y in P, there exists a unique map (x,y : Cx > Cy, such that Oy,z (x,y = x,z whenever x < < z. We denote by Ppers (C) the functor category of P-persistence objects in C. When C is the category of simplicial complexes, chain complexes, groups, respectively, the objects of Ppers (C) are called P-persistence simplicial complexes, chain complexes, groups respectively. In particular, considering the poset N of natural numbers with the usual order, a positive N-persistence complex, or persistence complex for short, over a ground ring R is a family of chain complexes C = {C}>0 over R, together with chain map fr : C > C++1, giving the following 7"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 8,
        "page_content": "diagrams in the category of R-modules: * * 7 * 1 * A persistence module M is a persistence complex concentrated in degree zero, i.e. a family of R-modules {M }i>o, together with maps fi : Mi > Mi+1. The persistence complex C is called of finite type if each R-module Ci is finitely generated, and if there exists some N such that the maps f2 are isomorphisms for i \u2265 N. 3.2 Persistent homology A simplical complex is a set K, together with a collection K of subsets of K, satisfying the following two conditions: i) for every v E K, {} E K, and {} is called a vertice of K; ii) o E K and o' Co implies o' E K. A k-simplex of K is an element o of K whose cardinal |o| is equal to k + 1. An orientation of a k-simplex o = {vo, ... , Uk} is an equivalence of orderings of the vi in o; two orderings are equivalent if they can be obtained from an even permutation. A simplex with an orientation is called an oriented simplex, and we write [vo, . .. , Vk] or [o] to denote the equivalence class. Denote by Ck(K) the kth chain module of K defined as the free R-module on oriented k- simplices of K. The boundary operator Ok : Ck(K) -> Ck-1(K) is the map defined on any simplex o = {vo, . . . , Uk} by setting Ok(G) = >(-1)\u00bf[vo, . . . , vi, . . . , Uk], i where in the right side uj indicates that the vertex vi is eliminated from the simplex. Denote by ZK(K) = ker Ok, Bk(K) = Imdk+1, and Hk(K) = Z\u0141(K)/ Bk(K) the cycle, boundary, and homology modules respectively. A subcomplex of K is a simplicial complex L such that L C K. A filtered complex is a complex K together with a filtration, that is a nested sequence of subcomplexes: K\u00ba C K1 CK2 \u2103 ... CK\" = K. Given such a filtration, we define the persistence complex C(K) = {C(Ki) }iEN, in which the chain maps fi,2+1 : C*(K) > C*(Ki+1) are induced by the inclusions K' > K+1. Applying the kth homology functor Hk to each complex, we obtain Hk(C(K)) := {Hk (C(Ki)*) }iEN, which has the structure of persistence module over the ground ring R. Denoting by nk i,i+p : Hk (K2) > Hk (Ki+P) the map induced by the inclusion Ki -> Ki+p, we define the p-persistent kth homology group of Ki as im(n2,2+P), which we denote by H1,P (K), see [13]. Finally, note that if K is finite, then the persistence complex C(K) is of finite type, and thus the persistent homology Hk(C(K)) is also of finite type. 8"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 9,
        "page_content": "3.3 Classification of persistence module and algorithm for persistence 00 Given a persistence R-module (Mi, di,i+1)i, we define a graded module over R[t] by setting a(M)= i=0 Mi where the R-module structure is induced by the direct sum of its components, and the action of t is defined by t \u00b7 (mo, m1, . . . , mk, . .. ) = (0, 00,1 (mo), $1,2(m1), . . . , \u00d8n,n+1(mk), . . . ). The correspondence a is functorial and establishes an equivalence between the category of per- sistence R-modules of finite type and the category of finitely generated graded R[t]-modules. When the ground ring is a field k, combining this with the structure theorem of finitely gener- ated graded modules, we know that a persistence module has a decomposition n m i=1 j=1 (3) for some n, m and families of natural numbers (ki)i, (lj); and (hj)j, where Ek denotes a k-shift in grading. From this classification of persistant modules one derives an algorithm for computation of persistence homology over a field [36]. This algorithms is defined as follows. Denote by {e}} and {\u00ea;} to represent homogenous bases for the persistence k-modules Ck and Zk-1. Denote by Mk the matrix of Ok in these bases. The usual procedure for calculating homology is to reduce the matrix to Smith normal form and read off the description of Hk from the diagonal elements. We compute these bases and matrix representations by induction on k. For k = 1, the standard basis of Co = Zo is homogenous and we may proceed as usual. Suppose now that we have a representation Mk of Ok relative to the standard basis {e}} of Ck and a homogeneous basis {\u00ea;} of Zk-1. For induction, we must compute a homogeneous basis for Zk and represent Ok+1 relative to the computed basis for Zk and the standard basis of Ck+1. We begin by sorting the basis {e } in reverse degree order and then transform the matrix Mk into column-echelon form Mk. This is a lower staircase form, the general form of which is depicted below, in which each landing is of width one, the steps have variable height. A pivot is the first non-zero value in a column and a row (resp. column) with a pivot is called a pivot row (resp. column). The diagonal elements in Smith normal form are the same as the pivots in column-echelon form and that the degrees of the corresponding basis elements are also the same in both cases [36]. Zomorodian and Carlsson prove in [36] that each row contributes to the persistent homology Hk-1 of C. in the following way: i) If row i is a pivot row with pivot th, then it contributes Edegeilk[t]/tn. ii) If row i is not a pivot row, it contributes 2degei k[t]. where these contributions correspond to factors in the characterization (3), see [36] for details. 9"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 10,
        "page_content": "4 Natural homology of directed spaces In this section, we recall definitions and constructions involving directed spaces and natural homology, an invariant thereof. In Sections 4.1 and 4.2, we recall the definition of directed space and associated categorical constructions, as well as the notion of natural system and composition pairings. Finally, Section 4.3 recalls the definition of natural homology from [9], an invariant of directed spaces encoded by natural systems. In this final subsection, we also recall the notion of bisimulation and provide, see Lemma 1, the link between dihomemorphisms between directed spaces and bisimulation equivalence of their associated natural homology diagrams. 4.1 Directed spaces Recall from [22] that a directed space, or dispace, is a pair X = (X, dX), where X is a topological space and dX is a set of paths in X, i.e. continuous maps from [0, 1] to X, called directed paths, or dipaths, satisfying the three following conditions: i) Every constant path is directed, ii) dX is closed under monotonic reparametrization, i.e., for any continuous map 4 : [0, 1] -> [0, 1] such that 4(0) = 0, 4(1) = 1 and 4 is monotonic, then f o 4 belongs to dX for every f in dX, iii) dX is closed under concatenation. We will denote by f*g the concatenation of dipaths f and g. A morphism ? : (X, dX) -> (Y, dY) of dispaces is a continuous function y : X -> Y that preserves directed paths, i.e., for every path p : [0, 1] -> X in dX, the path poy : [0, 1] -> Y belongs to dY. The category of dispaces is denoted dTop. An isomorphism in dTop from (X, dX) to (Y, dY) is a homeomorphism from X to Y that induces a bijection between the sets of dipaths dX and dY. Given two directed spaces X and Y, a dihomeomorphism from X to Y is a continuous map f : X -> Y which respects directed paths, i.e. f*(p) = pof E dY for all p E dX, such that there exists a continuous map g : Y -> X respecting directed paths as well, with fog = Id and gof = Id. Equivalently, for the sub-class of compact partially-ordered spaces, f and g must be continuous, respect the respective partial orders, and be inverses to one another. It is clear that having dihomeomorphic directed spaces is a fine semantic equivalence, when it comes to applications in concurrency theory. Two dipaths f and g are reparametrization equivalent if there exist reparametrizations 4, v such that foy = gov. The trace of a dipath f in XX, denoted by f, or f if no confusion is possible, is the equivalence class of f modulo monotonic reparametrization. The concatenation of dipaths of &' is compatible with this quotient, inducing a concatenation of traces defined by f*g := f * g, for all dipaths f and g of X. The sub-topological space of dX of dipaths in X from a E X to B E X is denoted by dX (a, B). Note that in the case of the geometric realization of finite geometric precubical sets without loops, it is known [20] that we have a complete metric space and that we can define the l1-arc length l1 (p) of a directed path p. In that context, traces f always have a representative f such that the length of the sub-path from f(0) to f(t) along f is t. 10"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 11,
        "page_content": "For a dispace X = (X, dX) and x, y E X, we denote by Di(X)(x, y) the space of dipaths f in X with source x = f(0) and target y = f(1), equipped with the compact-open topology. For x, y E X, the trace space of the dispace X from x to y, denoted by E(X)(x, y), is the quotient of Di(X)(x, y) by monotonic reparametrization, equipped with the quotient topology. 4.2 Trace category and trace diagrams Recall that the category of factorizations of a category C, denoted by FC, is the category whose 0-cells are the 1-cells of C, and a 1-cell from f to f' is a pair (u, v) of 1-cells of C such that ufv = f' holds in C. Composition is given by (u, v) (u', v') = (u'u, vv'), whenever the pairs u', u and v, v' are composable in C, and the identity on f : x -> y is the pair (1r, ly). A natural system on C with values in a category V is a functor D : FC -> V. We will denote by Df (resp. D(u, v)) the image of a 0-cell f (resp. 1-cell (u, v)) of FC. A directed space may be seen as a category using the notion of traces, and this association is functorial. Indeed, consider the functor P : dTop -> Cat with values in the category of small categories which associates to a dispace X' the trace cate- gory of X, whose 0-cells are points of X, 1-cells are traces of X, and composition is given by concatenation of traces. The trace diagram of a dispace X' in the category Top of topological spaces is the natural system T(X) : FP(X) -> Top, sending a trace f : x -> y of X' to the topological space E(X)(x, y), and a 1-cell (u, v) of FP(x') to the continuous map which sends a trace f to u * f * U. u *_* v: {(X)(x, y) > {(X)(x', y'), Recall from [5], that the category of natural systems with values in Top, denoted by opNat(Top), is defined as follows: i) its objects are pairs (C, D) made of a category C and a natural system D : FC -> Top, ii) its morphisms are pairs (, T): (C,D) -> (C', D') consisting of a functor @ : C -> C' and a natural transformation T : D -> @*D', where the natural system @*D' : FC -> Top is defined by (\u00a7*D')(f) = D'(@f), for every 1-cell f in C, and * D'(u, v) = D'($(u), \u00a7(v)), for all 1-cells u, v in C, 11"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 12,
        "page_content": "iii) composition of morphisms (,o) : (C', D') -> (C\", D\") and (,T): (C,D) -> (C', D') is defined by where & o @ denotes composition of functors and where the component of the natural transformation (\u00a7*0) o T at a 1-cell f of C is TfOR(f). The family of functors T(X) indexed by dispaces X' extends to a functor T : dTop -> opNat(Top) sending a dispace X' to the pair (P(X), T(X). Note that a morphism of dispaces 6 : x > y induces continuous maps 4x,y: {(x)(x,y) >()(6(x), 6(y), for all points x, y of X, and thus a natural transformation between the corresponding trace diagrams: \u09f3:T(X)= T(Y). 4.3 Natural homology Recall from [10], that for n > 1, the nth natural homology functor of x \u00cen(X) : FF(X) -> Ab is the functor defined as the composite FP(x) (*) Top \"} Ab, where T(X) is the trace diagram and Hn-1 is the (n - 1)th singular homology functor. The functors Pn (X') and Hn(X), for X' in dTop, extend to functors Pn : dTop -> opNat(Act), and Hn : dTop -> opNat(Ab), sending a dispace X to (P(X), Pn(X)) and (F(x), Hn(X)) respectively. The natural homology Hn(X) of a directed topological space X' is very fine-grained: it not only records local homology groups Hn(X)f for a trace f of X, but also for which traces they occur. Just as with persistent homology, see Section 3, what counts is the patterns of change between groups Hn(X)f and Hn(X)g when f is changed into the concatenation of traces g = u * f * u by some extension (u, v), not the values of the trace f. This is done by looking at natural homology modulo a notion of bisimulation of natural systems, and more generally of Ab-valued functors, defined in [9] and recalled below. 12"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 13,
        "page_content": "4.4 Bisimulation Given two small categories X, Y and two functors F : X -> Ab and G : Y -> Ab, we call bisimulation between F and G any set R of triples (x, n, y) with x a 0-cell of X, y a 0-cell of Y and n : Fx -> Gy an isomorphism such that: i) for every 0-cell x of X, R contains some triple of the form (x, n, y), and similarly for every 0-cell y of Y; ii) for every triple (x, n, y) E R and every 1-cell i : x -> x'in X, there is a triple (x', n', y') E R and a 1-cell j : y -> y' in Y such that n' o Fi = Gjon, and symmetrically, for every (x, n, y) E R and every 1-cell j : y -> y' of Y there is a triple (x', n', y') E R and a 1-cell i : x > x' such that n' o Fi = Gjon: 8 Fx > Gy y n i Fi Gj j > 7 Fx' Gy \u02b9 We say that F and G are bisimulation equivalent if and only if there is a bisimulation R between them. This is an equivalence relation. We now prove that indeed, dihomeomorphic directed spaces have bisimilar natural homologies: Lemma 1. Suppose f : X > > is a morphism of directed spaces with inverse g : > > X. Then the functors Hn(X) and Hn(y) are bisimulation equivalent, for every n E N. Proof. For some n in N, we need to construct R, a set of triples (x, n, y), with x a 0-cell of FP(X), y a 0-cell of FP(y), that is x and y are traces of X' and y respectively, and n : Hn(X)= > Hn ()y is an isomorphism making this set of triples a bisimulation. We define the R from f and g as follows. It is going to contain all triples (x, x,y, y) with x any trace of X, y = f*(x) which is a trace of y, and nr,y is the map from Hn(X)z to Hn (y)y which sends class [p] of a directed path p starting from x(0) and ending in x(1) within XX, to class [f* (p)]. This is well defined since, first f* (p) is a directed path from f*(p)(0) = f(p(0)) = f(x(0)) = y(0) to y(1) and as f is a directed homeomorphism, f* induces an homeomorphism between trace spaces FP(X) and FP(y), hence induces an isomorphism between their homology groups. Now we check that the set of triples R is indeed a bisimulation. Consider a morphism i : x > x' in X, i.e. i = (a, B) with a and B, traces in X. We consider now morphism j : y > y' in y defined as j = (f*(a), f*(B) and y' = f*(a) * y * f*(3) = f*(x'). As before, f* induces an isomorphism n'y, between Hn(X)=' and Hn(X)y and (x', na'y', y') is in R. Furthermore, na' y' o Hn(X) = Hn(V); o nx,y since, for p a trace in X from x(0) to x(1): na' y' o Hn(X);([p]) =na',y'([ao po \u00df]) = [f* (a) o f* (p) of*(B)] = Hn(y);([f*(p) = Hn(V)jonx,y([p]) 13"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 14,
        "page_content": "hence R is a bisimulation. 5 Persistent homology of directed spaces In this section we explore the use of persistent homology as an invariant of directed spaces, as well as its relationship to natural homology in the context of partially ordered spaces. First, we show that for these directed spaces, the associated natural homology modules are in fact persistence objects as defined in Section 3. We then define persistent homology along traces in a directed space and show the compatibility of this definition with the interpretation of natural homology as a persistence object. To finish the section, we illustrate our constructions on the matchbox example. 5.1 Natural homology as a persistence object Consider a directed space X = (X, dX) and its trace category P(X). We define a relation on traces in x' by setting f \u2264 g Bu, v EdX, g = ufv. We recall that a pospace X = (X, \u2264x) consists of a Hausdorff topological space X and a partial order \u2264x which is closed in the product topology X x X. Pospaces are naturally interpreted as directed spaces by equipping them with the set of increasing paths dX from the unit interval, with its usual ordering, to X. Lemma 2. In any directed space, this defines a pre-order. In a pospace, it is a partial order relation. Proof. Since constant paths are directed, the relation is reflexive, and we have transitivity by associativity of concatenation of traces. Indeed, if f < g and g < h, there exist extensions (u, v) and (u', v') such that f = ugv and g = u'hv'. Thus, f = u(u'hv')v = (uu')h(v'v), and f < h. In the case of a loop-free directed space, we also need to prove anti-symmetry of <. Consider f, g E dX such that f & g and g \u2264 f. By definition there exist extensions such that f = ugv and g = u'fv'. Thus f = uu'fv'v, so uu' and vv' are loops, and must therefore be constant paths. By Theorem 1 below, this means that the image of both uu' and v'v are the singleton space, meaning that the image of each of the dipaths u, u', v, v' are the singleton space, i.e. these are all constant paths, concluding the proof. This poset, denoted by P(X), will be called the trace poset of (X, \u2264x). Consider a pospace x = (X, \u2264). We know from [24] that dipaths in X are characterized by their image: Theorem 1 ([24, Thm. 3.15]). The image of a dipath in a pospace is isomorphic to either the directed unit interval or the singleton space. The above results essentially state that two dipaths are equal modulo reparametrisation if and only if they have the same image, and that this induces a partial ordering on traces. In particular, we obtain the following result: 14"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 15,
        "page_content": "Proposition 1. For a pospace X', P(X) is isomorphic to FP(x). Proof. By the above theorem, we have ufv = u'fv' u = u' and v = v', meaning that there is at most one extension between any two traces. This allows us to interpret natural homology as a functor on a poset, i.e. as a persistence object. Indeed, in a pospace X', the ith natural homology diagram associated to x' is a P(X)- persistence group. Taking coefficients in a field k, we obtain P(X)-persistence k-vector spaces. 5.2 Persistent homology along a trace Here, we show how unidimensional persistence modules may be obtained from parametrisations of traces. Let f be a trace in X' a pospace for which we have fixed some parametrisation f. For a given point of in the image of f, denote by [af, f] the interval between of, identified with the constant trace f(to) = af for some to \u20ac [0, 1], and f, i.e. traces p in the poset P(X), such that af Spsf. Given parametrisations of [0, to] and [to, 1] within [0, 1] via maps y- : [0, 1] > [0, to] and y+ : [0, 1] -> [to, 1] respectively, we denote by sfs the trace of f restricted to [to - - (s), to + 7+(s)]. We thus obtain a [0, 1]-persistence simplicial complex {K(sfs)}s. This is a filtration of the trace space associated to the trace f. Notice that we are always considering a chain in the poset of traces from the constant trace f(0), f(1), or f(to) to f. We call such filtrations initial (resp. terminal) point filtrations when &f = f(0) (resp. a = f(1)) Taking some order preserving map N -> [0, 1], we obtain N-persistence simplicial complexes from the above constructions. All of these persistence objects can be considered as R-persistence objects as follows: [0, 1]-persistence objects are R-persistence objects which are constant on negative parameters and on parameters greater or equal than one. N-persistence objects will be considered as piecewise constant R-persistence objects in what follows. However, for questions of computability, it is useful to consider N-persistence. In all the above cases, we obtain a chain c = (fi)iER in the interval [af, f] and define the persistent homology along a trace f with respect to c as a functor from R, seen as the poset category (with the usual ordering) to the category of abelian groups, associating i E R to: \u00ccn(fc) ;:= \u00cen(X); where we recall that Hn (X)f; is the natural homology in dimension n of X' at trace fi. This R- persistence module is constructed as described above, that is by considering the [0, 1]-persistence module given by a trace as a N-persistence module and completing by constants. 5.3 Maximal traces and maximal chains In order to make the link between parametrisations and chains more concrete, we present the link between maximal chains in the trace poset and parametrisations of extensions along maximal 15"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 16,
        "page_content": "traces. In fact, the chain we use does not depend on (re)parametrisations, but rather on the pair of end-points visited along a trace. Recall from the previous subsection that given a trace f, we construct a persistence module using the following data: \u00b7 A point a in the image of f. \u00b7 A parametrisation f of f. \u00b7 Reparametrisations y- : [0, 1] -> [0, to] and 7+ : [0, 1] -> [to, 1], where f (to) = a. A maximal trace is a trace which cannot be extended on either side. Hence, these are the maximal elements in P(X). Maximal chains in P(X) link minimal elements, i.e. constant dipaths, to maximal traces along a sequence of extensions. Clearly, for a trace f, the above data encodes a maximal chain in the trace poset. Indeed, we obtain a chain sfs from a, seen as a constant trace, to f, which is maximal since it is derived from the continuous maps y+ and y -. Consider t E P(X) a maximal trace. Let do E &' be the beginning-point of t, and consider the interval [ao, t] in P(X). For any g, h E [ao, t], we have either g \u2264 h or h \u2264 g, since all elements of this interval are traces starting at do and which are sub-traces of t. Thus the interval [oo, t] is itself a chain. From this we deduce that there is a unique maximal chain from do to t, which we denote by CY, namely the interval between them. A symmetric argument shows that this is also the case when we consider chains from @1, the terminal point of t, in which case the unique chain, denoted by Cf is the interval [@1, t]. Now let us consider a point o in the trace t which is neither the beginning nor end-point of t. Let t1 St the trace from ao to a, and t2 St the trace from a to a1. We claim that the interval [a, t] is the cartesian product, as posets, of the chains Cu and Cl2. Indeed, given any trace f E [a, t], we know that f is a subtrace of t which passes through a. Thus there exist a unique pair of traces (f1, f2) E [a, t1] > [a, t2] such that f = f1 * f2. Conversely, any pair (f1, f2) E [a, t1] x [a, t2] of traces can be concatenated to obtain a trace in the interval [a, t]. So any chain from a to t is a chain in the product [a, t1] x [a, t2], ordered coordinate-wise. More generally, given any maximal chain C in P(X), we know that it has a maximal element, namely the union of all traces in C, which we denote by t. Furthermore, since every trace is a compact subspace of X, it has a minimal element, a, which must be a constant trace by maximality of C. Thus every maximal chain in P(X) is of the type described in the previous paragraphs. Summing this up, we obtain the following result: Theorem 2. Let X' be a pospace, consider its trace poset P(X), and let C be a maximal chain therein. Then C has a maximal element which is a maximal trace tc, and has a minimal element which is a constant trace ac. Furthermore, . If ac is the beginning-point ao or end-point a1 oft, then C is unique and is equal to the interval [ac, tc]. . If not, then C is a chain in the product of chains Cf, and CO2, where t1 (resp. t2) is the unique subtrace of t going from ao to a (resp. from a to a1). 16"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 17,
        "page_content": "This shows that maximal chains in the trace poset are independent of the parametrisation we choose for our maximal traces. Indeed, given a maximal trace f the first item above states that there is only one chain from the initial or terminal point, which can be obtained from any parametrisation f of f. The second item states that if we are considering extensions from an interior point a, the maximal chains from a to f correspond to directed paths in the cartesian square [0, 1] x [0, 1]. These directed paths correspond to equivalence classes of pairs y+, y- under the equivalence relation which identifies pairs which visit the same pairs of extremal points. To make the construction above more clear, we will show explicitly how to find the homology along a trace by restriction of the natural homology diagram. Recall that in a pospace X', the trace poset P(X) and the factorisation category of the trace category FP(X) are isomorphic, so we may view natural homology Hn(X) as a functor on P(X) with values in the category Ab. In practice, persistent homology is defined with coefficients in R or in a field k, whereas natural homology generally considers more general abelian group coefficients. We will restrict in all practical cases to homology with coefficients in k so that to make comparisons possible. Proposition 2. Let & = (X, dX) be a pospace and f a trace in X. Let C be a chain in the interval [af, f] in the poset of traces. Let (fi)iek be a parametrisation of C obtained as described in Section 5.2. Restricting the natural homology functor Hn(X) to C, we obtain a persistence k-vector space Hn (X)f ;. 5.4 Example: persistent homology of the matchbox Consider the case of matchbox example presented in Section 2. Let us calculate the persistent homology along each of its maximal traces, starting at the initial point and extending into the future. We fix some field k and will proceed via the method developed in [36]. To each of the maximal traces (, \u20ac, a, B, 8, y pictured in (2), we associate a sequence of subtraces corresponding to a decomposition of the trace along each 1-simplex in the matchbox. For example, the trace a is decomposed into the chain ao \u2264 \u03b11 \u2264 \u03b12 \u2264a3 = \u03b1, where do is the constant path equal to (0, 0,0), which a1 extends to (0, 1, 0). This trace is further extended to (0, 1, 1) obtaining Q2, and then finally extended to (1, 1, 1) giving the total trace a. A similar decomposition, which we will denote with the same indices, can be found for each of the maximal traces. This sequence of traces gives a filtration of the simplicial complex pictured above. In the case of a, we obtain the following filtration: A 8 B C K(ao) Q1 K(a1) \u03b2 52 E K(@2) w D 5 a K(a3) 17"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 18,
        "page_content": "We extend this filtration into a N-persistence simplicial complex by considering copies of K(@3) for all i > 4. We denote by C. (K(ai)) the chain complex over k obtained from the simplicial complex K(di), obtaining a N-persistence chain complex C+(K(ao)) fo,1 CH(K(a1)) f1,2 Cx(K(@2)) - f2,3, C*(K(Q3) f3,4 where fn,n+1 are induced by the inclusions of simplicial sets given by the filtration. For each natural number p, we denote by Hi the pth homology group of C. (K(ai)), thus obtaining a sequence of homology groups HO 90 > H1 \u00a20,1 \u00a21,2 > H2 92,3, H3 Q3,4 H3 \u00a24,5 Pn-1,n Pn,n+1 H39 p > .. , where the On,n+1 are identities for n > 3. This is in fact an N-persistence k-vector space. We define a non-negatively graded module over k[t] by setting i=0 2 Hp := H3 2 i=3 and defining the action of t by t . (hi)i = (pi,i+1 (hi))i, where the hi belongs to Hi. We will calculate the graded module of persistent homology via matrix representations of the boundary maps Ok associated to the persistence chain complex C+ (K(ai)) as described in [36]. We calculate Ho(a), the oth persistent homology along a. For this, we fix homogeneous bases for Zo and C1. Since Zo = Co, we may take the standard basis in both cases. Thus, for Co we obtain the basis {ao, $2, 6, 7, 8, 6}, and for C1 we obtain the basis {A, B, C, D, E}. We now calculate the matrix of d1 with respect to these bases, taking care to order the basis of Co in reverse degree order: BACDE B -1 0 0 0 1 1 1 -1 0 0 0 8 0 1 -1 0 0 E 0 0 1 -1 0 52 0 0 0 t 0 0 0 0 0 -t3 We now calculate the column-echelon form of the above matrix, obtaining B A CDE \u00df -1 0 Y 1 -1 0 0 8 0 1 \u20ac 0 0 1 52 0 0 0 0 0 -1 0 0 t 0 0 0 0 0 -1 0 t 0 -+3 18"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 19,
        "page_content": "where E'= A+B+C+D+E. In the case of the persistent homology along a, we see that the first four rows contribute nothing to the description of Ho(a), and that the last two contribute Y2k[t]/t and K[t] respectively, i.e. We obtain a similar result for the persistent homology along (. Below are the standard and column-echelon forms of d1 in this case: BACDE \u00df -1 0 0 0 1 Y 1 -1 0 0 0 8 0 1 -1 0 \u20ac 0 0 1 -1 0 52 0 0 0 0 -t 0 0 0 t3 0 Ho(a)= kOkOK2 Ok \u2026\u2026 OkO\u2026 B A CD B -1 0 Y 1 -1 0 0 1 \u20ac 0 0 1 52 0 0 0 0 0 -1 0 Ho(S)=kOkOK2 Ok \u2026\u2026. Ok \u2026\u2026 0 0 0 0 0 0 -1 0 0 0 -t t3 +3 We therefore obtain the same isomorphism class for Ho(S) as we did in the case of a: The other four dipaths yield a simple persistent homology. Indeed, there is only one class which persists throughout the sequence. Indeed, along 3 for example, a homogeneous basis of Co is {60, 72, 6, 9, 8, a}. The basis for C1 is the same, but now B has degree two rather than three. We obtain the following matrix representation of @1: E ACD a -1 0 8 0 5 0 \u20ac 0 72 0 -t Bo t3 0 0 0 1 -1 0 0 0 0 1 -1 0 0 B 0 0 1 0 0 0 1 0 -+2 E A D A+C a -1 8 0 5 0 E 0 72 0 -t 0 -t Bo t3 0 0 1 0 0 -1 0 0 0 1 0 1 0 0 0 B 0 0 0 0 1 -+2 We indeed see that the graded module Ho(3) is simply k[t], since all pivots are of degree zero and there is one non-pivot row. 5.5 Natural homology of the matchbox Now we describe the natural homology diagram of the matchbox. First we will describe its restriction to the principal upset in P(X) given by the constant path at the initial point (0, 0, 0). 19"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 20,
        "page_content": "The following diagram depicts the Hasse diagram of this upset: B3 Y3 \u20a13 53 83 E3 B2 72 Q2 52 82 \u20ac2 Q1= 61 71= 01 \u20ac1 = 51 0 Traces in the same red circle yield the same trace space, i.e. have the same beginning and end points. Each line corresponds to an extension. The natural homology diagram is depicted below, the arrows being induced by extensions: 1 k 1 12 k k 1 k - k Each path of length 3 in the above diagram corresponds to the persistence vector space obtained by taking the persistent homology along one of the maximal traces. Note that since none of the maps depicted in the diagram are identically zero, the only maps which are not uniquely defined are those with codomain k2. Comparing the above with the Hasse diagram of the trace poset of the matchbox, it is clear that \"glueing\" the persistence modules along chains while taking end-points into account relates the uni-dimensional persistence complexes to natural homology. This will be made explicit in the next section. 20"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 21,
        "page_content": "6 Simultaneous persistence of directed spaces In this section, we give methods for amalgamating information from persistent homology along traces. We recall constructions in the category of posets which will be useful when using persis- tent homology along traces to recover natural homology. We will denote by Pos the category of posets and order preserving maps, and by Posin the wide subcategory with order preserving inclusions. 6.1 Colimits of chains in posets In order to reconstruct natural homology from persistent homology along traces, we must amal- gamate information from each chain in the trace poset. For this reason, we discuss here how to construct a poset from its (maximal) chains. Firstly, notice that in general, using exclusively maximal chains is not enough to reconstruct a poset. Indeed, consider the poset whose Hasse diagram is depicted below: 1 y1 y2 1 1 Its maximal chains are (x, y1, 2) and (x, y2, z). In order to obtain the whole poset as a colimit, we additionally need the inclusions of x and z into these chains. While a poset is in general, not the colimit of its maximal chains, it is the colimit of all of its chains. Given a poset P, we consider the full subcategory Chp of Posin consisting of the chains of P, called the poset of chains. The diagram of chains associated to P is the inclusion functor Fp : Chp -> Pos. We have: Proposition 3. For any poset P, colim Fp = P. Proof. The colimit of Fp is computed as follows, in Pos: first we take the coproduct of all chains of P, which is the union of all sub-linear orders (x )iel of P where j ranges over all chains of P, for some indexing family I and x E P for all i E I. Then we identify all common subchains within the (x2)iEI, in particular the elements themselves. Therefore we identify all x2 within these linear orders that have to be identified, and take the transitive closure of the corresponding orders. This is indeed the poset P. When considering exclusively maximal chains, we may obtain P by adding their intersections to the diagram of inclusions. This can be done in two ways: either taking full intersections or restricting to chains. In the latter approach, the colimit is of a functor whose domain is a subcategory of Chp, whereas in the former, the posets used in the colimit are not necessarily chains. 21"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 22,
        "page_content": "Consider a (finite) poset P and two maximal chains C1, C2 of P. The pullback of C1, C2 in Pos corresponds to the full sub-poset of P given by the intersection C1NC2. Denote by pmChp the subcategory of Posin consisting of maximal chains in P and their pullbacks. By maximality of the considered chains, this category looks like a zig-zag. Recall that a chain quasi-pullback of two chains C1 and C2 in P is a chain C12 such that C12 -> C1, C2 in Posin and such that for any chain C' -> C1, C2, there exists C' -> C12 in Posin. This is summed up in the diagram below: C1 1 ...= >C12 P > > C2 The category Chp of chains in P is closed under quasi-pullback. Indeed, the poset induced by the intersection C1 and C2 is a collection of chains. The maximal chains of this intersection are precisely the quasi-pullbacks of C1 and C2. Consider the (discrete) subcategory of Posin consisting of the maximal chains in P. The completion of this category by chain quasi-pullbacks is denoted by mChp. It is a subcategory of Chp. Compiling all of this, we obtain the following result: Proposition 4. A poset P is the colimit of the following inclusion functors: i) The minimal (completed) diagram of maximal chains pmCh -> Pos. ii) The (completed) diagram of maximal chains mCh -> Pos. Proof. These follow the same schema as the proof of Proposition 3. 6.2 Application to diagrams Now that we have assembled information on colimits of chains, we will see how these construc- tions carry over to diagrams over chains. We fix a category C. First, we introduce a category representing persistence objects of a certain type C, without fixing the indexing poset. Specifically, this category, denoted by Pers(C), has for objects pairs (P,F : P -> C) where P is a poset (i.e. F is a P-persistence object in C). A morphism from (P,F : P >C) to (Q, G : Q > C) is a pair (o, o) where o is a morphism P > Q of Pos and o is a natural transformation F => Go \u00a2: o P > p' F G 1 C 22"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 23,
        "page_content": "Composition of morphisms is given by (, T) o (0, 0) = (100, To 00), and the identity on (P, F) is the pair (1p, 1F). We denote by IsoPers(C) the subcategory of Pers(C) in which we only take morphisms (\u00f8, o) such that o is a natural isomorphism. Note the following: consider the wide sub-category of opNat(C), as defined in Section 4.2, consisting of natural systems with values in C, with base category being a poset. This category naturally embeds in the category of diagrams Pers(C). Let P be a poset and an inclusion G : @ -> Posin, where @ is a category of sub-posets of P and inclusions such that colimG = P. Suppose that we are given a functor D : P -> C, i.e. an object of Pers(C). Since the colimit of G is P, for each p in @, we have an inclusion ip : Pp -> P. Using these inclusions, we define a functor F : @ -> Pers(C), sending each p to the restriction of D to Pp, denoted by Fp := (ip)*D. We denote by Fp the functor associated to p E \u00d8, and by (Pp, Sp) its domain. When p <+ p', we obtain a morphism (F1, F2 ) of Pers(C). Note that F is a functor F : @ -> IsoPers(C), since Fp' is the restriction of D to Pp', hence agree with Fp which is the restriction of D to Pp @ Pp' . Proposition 5. Let P, G, D and F be as defined in the above paragraph. We have colim F = D. Pers(C) Proof. The functor F determines a functor GF from @ to Pos: GF: - > Pos pt>Pp F1 p.p' Y V pr>Pp' By hypothesis, we have GF = G, so the colimit of GF is equal to P. In this optic elements of P are equivalence classes [x] of elements xp E Pp under the equivalence relation generated by xp ~ Xp' if, and only if, p <+ p' and For(Tp) = xp'. Notice that if [xp] = [xp'], there exists a zig-zag of Fa.'s between them. Therefore, since the components F2.,'s are all natural isomorphisms, we have Fp(Ip) ~ Fp' (Ip'), hence [xp]= [Tp]=> Fp(ap) ~ Fp' (xp') (4) Furthermore, we know that [x] <p [y] if, and only if, there exists a finite sequence p = po, ... , Pn = p' and elements vi, Wi of Ppi such that Jp = Upo Spo Wpo N UpI SpI Wpi N . . . N Vpn-1 Spn-1 Wpn-1 ~ Upn Spn Wpn = yp', (5) and [xp] = [x], [yp'] = [y]. We also point out that each equivalence class [x] of P is endowed with an order which is inherited from : Xp >[r] Xp' if, and only if, p < p'. For each of these equivalence classes, we 23"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 24,
        "page_content": "consider a functor F[x] [x] => C Xp > Fp(xp) F2 (Tp) \u2264[x] Y V 8 -> Fp' (xp') 2 By hypothesis, C is co-complete, so we obtain the colimit C[a] in C of the diagram given by Fia]. For every xp, Ip', Fp(Ip) ~ Fp' (Tp) since the natural transformations induced by F are isomorphisms. Thus Fp(ap) ~ c[a] for any xp E [x] (6) Now suppose that [x] \u2264 [y]. We want to prove that c[y] is a co-cone for Fiz]. We reason by induction on the length n of the sequence given in Equation (5). If n = 0, Equation (5) amounts to the existence of po E @ and representatives Upo, Wpo E Ppo with Upo Spo Wpo , p = po = p', Xp = Upo; Wpn = yp' and [p] = [x], [yp'] = [y]. We must show that for all xp >[x] Xp', we have a commutative diagram of the following shape: Fp(xp) p,pl F2 ,(xp) > Fp' (xp') (7) C[y] Since Upo Spo Wpo, functoriality of Fpo gives an arrow Fpo (Upo Spo Wpo) : Fpo (Upo) > Fpo (Wpo). This means that we have the following diagram, where all of the morphisms in the top triangle are isomorphisms induced by the natural transformations F2 (by Equation (4) in particular): ~ Fp(xp) 21 Fpo (Upo) 21 Fp'(xp') V Fpo (Wpo) V C[y] Therefore c[y] is a co-cone for F[x] and we obtain a unique arrow [x],[y] : [x] > [y] in C. Suppose now that we have the property that C[y] is a co-cone for Fix when the length of the sequence in Equation (5) is strictly below n. We want to prove the property still holds when 24"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 25,
        "page_content": "the sequence has length n. In the latter case, we have a finite sequence p = po, . . . , Pn = p' and elements vi, Wi of Pp; such that Ip = Upo Spo Wpo ~ Up1 Sp1 Wp1 ~ ... ~ Vpn-1 \u2264pn-1 Wpn-1 ~ Upn \u2264pn Wpn = yp', and [xp] = [x], [yp'] = [y], and we suppose that c[wpn-1] is a co-cone for Fa]. By Equation (6), we have c[wpn=1] ~ Fpn-1 (Wpn-1), and since Wpn-1 ~ Upn, we also have Fpn-1(Wpn-1) ~ Fpn (Vpn ) by Equation (4). Finally, since Upn Spn Wpn = yp', we have a morphism Fpn(Vpn) -> Fp' (yp') in C induced by Fp'. So we have the following: ~ Fp(ap) 21 Fpo (@po) 2 Fp'(xp') V Fpn (Vpn) 1 Fp' (yp') [y] Therefore C[y] is again a co-cone for Fa], giving the unique arrow I[x], [y] : C[a] > C[y] in C. We define a functor I : P -> C which sends [x] to c[a] and [x] > [y] to the arrow I[x],[y] given by the argument above. It is clear that T = D; it remains to show that I is indeed the colimit of F. Let D' : p' -> C another co-cone for F. For every p E @, we have morphisms (jn, j3) such that the following diagram commutes in Pers(C) for all p & p': (F1,F2 p,p/ '+ p,pl) > Fp' Fp (jp,jp) 1 V D In particular, this means we have the following commutative diagram in Pos: F1 p,p' Pp > Pp' 1 P' 25"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 26,
        "page_content": "This in turn means that P' is a co-cone over G, so we obtain a unique morphism \u00f8 : P -> P'. Furthermore, D' being a co-cone over F implies that for all xp, Ip' E [x], we have the following commutative diagram in C: Fp(Ip) p,p'(Tp) > Fp' (xp') j3 (Ip) jp (Tp) D'(j} (ap)) = D'(jy, . Flp.p.)(ap)) Since C[x] is the colimit of Fr], we therefore obtain a unique arrow [x] : [] > D'(jp(xp) for any representative xp E [x]. Denoting by ip : Pp -> P the morphisms in Pos induced by the colimit of G, we have that \u00f8([x]) = p(ip(xp)) = j1 (xp) for any p E @ such that Pp contains a representative of [x]. With some diagram chasing, we find that (, o) is a morphism of Pers(C) from I to D', and by construction is the unique map making the colimit triangles commute. Thus D is the colimit of F in Pers(C). 6.3 Natural homology as a colimit Using the above proposition, and constructions similar to that explained above, we obtain the following results: Theorem 3. Let X = (X, dX) be a pospace and a a point in X and Vect the category of k-vector spaces. 1. The natural homology of X' is the colimit in Pers(Vect) of the persistent homology along each of its traces. 2. The natural homology of X is the colimit in Pers(Vect) of the persistent homology of its maximal traces, seen as maximal chains in P(X), completed with pullbacks (resp. quasi- pullbacks). 3. The natural homology of the up-set of a, seen as a constant trace, in P(X) is the colimit in Pers(Vect) of the persistent homologies along the maximal chains passing through a, completed with pullbacks or quasi-pulbacks. Proof. These are direct consequences of Propositions 5 and 3. 7 Further remarks In this section we discuss two lines of research concerning the persistence homology of trace spaces and its potential application. 26"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 27,
        "page_content": "7.1 Metric structure on natural homology An important feature of persistent homology is that it gives information about a space in terms of its metric and not just its topology. We show that the construction of persistence homology bears similarities with the one of natural homology construction, with particular functors from a factorization category to Top. One may ask whether, when the directed space X we consider has a metric space structure, if there is a metric structure that can be exploited in the corresponding persistence modules. In the case of the geometric realization of finite geometric precubical sets without loops, as we saw in Section 4.1, we can define the l1-arc length l1(p) of a directed path p. From this, we can define a distance between elements of the trace poset, or more precisely, we can see the trace poset as a weighted poset as in [3, 4] as follows: w(p, q) = 0 if p & q, otherwise q = upu and w(p, q) = max{l1(u), l1(v)}. Interleaving distances in such contexts are expressed in terms of translations on posets, that vastly generalize the translations t E R -> t + E that defines that usual interleaving distance in unidimensional persistence. Here, we will only briefly discuss the classical interleaving distance in unidimensional persistence homology, extracted along a trace of a directed spaces, that will be induced by translations on the trace poset. The construction of interleaving distances for the full persistence object derived from natural homology is left for future work. Take two directed spaces X' and J, geometric realizations of finite geometric precubical sets without loops, p a trace of X' and q a trace of y. We also suppose we are given a chain (pi)iER in the interval [p(0), p], and a chain (qi)iER in the interval [q(0), q]. In what follows, we write pi to be the trace going from x\" to y\" (resp. q; the trace going from x? to y?) and (\", \" ;) the morphism from pi to pj (resp. (a , B2 ) the morphism from qi to qj). We construct by Proposition 2 a persistence k-vector space Hn(X)p; indexed by the chain (pi)iER and a persistence k-vector space Hn (2)gi indexed by the chain (qi)iER. In particular we have linear maps Hn(X) (, ,P.) from Hn(X)p; to Hn(X)p; (resp. Hn ()(a,9 ) from Hn() ; to Hn(X);). The interleaving distance between Hn(X)p; and Hn(y)g; is defined as follows. We say that Hn(X)p; and Hn (y)g; are E-interleaved, for some \u20ac > 0 if we have families of linear maps (pi: Hn(X)p; > Hn(V) qi+)iER and (vi : Hn()q> > Hn(X)pi+e){ER such that for all i { j E R: (8) = Hn (X) (@{+c,j+\u20ac/i+E, j+\u20ac) oui (9) (10) Pite Vi = Hn (V) (a) +2\u20ac) i+2\u20ac , Pq,+2\u20ac) (11) Then the interleaving distance between Hn(X)p; and Hn (y)q; is the infimum of all \u20ac \u2265 0 such that Hn(X)p; and Hn (y)qi are e-interleaved, oo if there is no such E. There are similarities and essential differences between bisimulation equivalent natural ho- mologies, and having non-infinite interleaving distance, as we show below. 27"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 28,
        "page_content": "When there exists a dihomeomorphism f : X > y, we know from Lemma 1 that their corresponding natural homologies are bisimulation equivalent, and we now show that there are particular relations between the persistent objects Hn(X)p; and Hn(V) q. Then, for any chain (Pi)iER in the interval [p(0), p], for any dipath p in X, Hn(X)p; and Hn (V) f* (pi) have interleaving distance 0. Indeed, we take Qt: Hn(X)pt > Hn() f*(pt) to be [f*(x)], for each [x] E Hn(X)pt, the homology class of path f*(x), for [x] the homology class of any dipath x from pt(0) to pt(1). Similarly, The equations (10) and (11) are trivially verified since (f-1)* o f* = f* o (f-1)* and \u00cen(X)(\u00aa * Fin(V) (af\" (P), Bf\" (p)) are identities (since afi, Bia), of\"(P) and B\"\"(P)) are constant dipaths. Simarly, Equations (8) and (9) are trivially satisfied since - \u00cen(V) (af* (P), Bf* (p)) are identities In a smilar manner, we prove that for any chain (qi)iER in the interval [q(0), q], for any dipath q in y, Hn(X) (f-1)*(q) and Hin(y)qi have interleaving distance 0. Of course, we miss an important point about persistence if we do not insist on considering only representative p of p that are parameterized by the arc-length. In that case, the interleaving distance is zero only when f is an isometry. For geometric realizations X of finite geometric precubical sets S, there are natural N- persistence objects, given by, for the geometric realization p in & of any combinatorial directed edge-path ps in of S the filtration of [p(0), p] in the trace poset of X' given by Ci being the geometric realization of the prefix with i steps of ps. Considering this N-persistence object as a R-persistence object hn(X)p, which is constant between two integers, we get that the interleaving distance between Hn(X)p and hn(X)p is at most 1. Whereas for such geometric realizations it is known (see [9]) that the \"combinatorial\" natural homology of S is bisimulation equivalent to the natural homology of &' only in some particular cases, e.g. when S is a cubical complex. 7.2 Algorithmical considerations In this section, we sketch practical calculations of the persistence module that corresponds, by Theorem 3, to natural homology, in the case of directed spaces arising in concurrency theory, which was the original motivation of this work. It has been shown in e.g. [16] that concurrent languages, such as the shared memory PV language, can be given semantics in pre-cubical sets, hence of a directed space. This has been been implemented in such software as ALCOOL [2] and oplate [25]. It has been shown that under some hypotheses, validated for such concurrent languages as the PV language, the natural homology computed on pre-cubical sets K, which is the homology of the diagram of traces spaces E(K)(f), for all a, b vertex in Ko, and f dipath from a to b in K1, is bisimulation equivalent to the natural homology of the dspace, geometric realization of K, [9]. For finite pre-cubical sets, Raussen [32] and Ziemianski [35] showed that singular homology groups of trace spaces such as $(K)(a, b) (which is isomorphic to all E(K)(f), f dipath from a to b) are computable, by calculating a finite presentation of the trace spaces (prod-simplicial, simplicial or CW-complex) from which we can compute homology using Smith normal form of 28"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 29,
        "page_content": "matrices. This has also been implemented in e.g. [15]. For \"nice\" precubical sets X such as the ones given by the PV language (without loops), and for any vertices a and b in X, there is a way to get a finite combinatorial model T(X)(a, b) (a finite CW-complex, or a finite simplicial set) that is homotopy equivalent to the trace space of X from a to b, E(X)(a, b), which is both functorial in X, a, b and also minimal among such functors [35]. Algorithmically, this relies on the cells of the CW-complex being identified with certain combinatorial paths in X, as was exemplified in Section 2. This algorithm allows to construct the (poset) filtration of CW-complexes (or homotopy equivalent simplicial sets) T(X)(a, b) and therefore compute their homology, for each a and b in X. Thus this would algorithmically build the persistence module, or natural homology, of the precubical set X. Of course this is a rather naive algorithm, in that we compute homology separately for each pair of points. We postpone the discussion of non naive algorithms similar to rank invariant computations for a future article. 8 Conclusion and future work In [5], we related natural homotopy, a natural system of homotopy groups associated to a dispace, to group objects in a certain category. This was achieved via the notion of composition pairing, introduced by Porter and largely inspired by lax functors. This extra structure of composition pairing is also present in natural homology, and we believe such \"homological\" operations may have some interesting counterparts in persistence homology, which we are planning on studying in future work. In hybrid systems theory, there is a natural sheaf theoretic formulation of dynamical systems, starting from [29], put in action (in particular, concerning temporal logic formulas and verifica- tion) and extended in [34] [33]. The formalization bears similarities with natural homology for directed spaces, except that it takes a sheaf-theoretic view, leading to contravariant, instead of covariant, functors. Consider the monoid (R+, +), seen as a one 0-cell category R. Its factorization category FR has as 0-cells, intervals [0, l] for l E R, and as 1-cells, inclusions of such intervals into larger intervals [0, l'], translated by some value k \u2264 ' - l. Presheaves on FR can be endowed with a Grothendieck topology, Johnstone topology [28], so that sheaves correspond to dynamical systems (in some ways, \"continuous graphs\" described locally by gluings of paths of various lengths, that agree on subpaths). Therefore, dynamical systems on some metric space X are considered as being particular presheaves, i.e. functors D : FR -> Set, describing, for each length l, the set of paths of length l, and for each inclusion Trk of [0, [] into [0, l'] as [k, k + ] (with k \u2264 l' - l), a restriction map from the length l' paths to length l \u2264 l' paths. Of course, for real continuous dynamical systems, we have an extra structure, which is that the set of paths on X is a topological space, with the compact-open topology (equivalently, uniform convergence). Hence what we really have is a presheaf D : FR -> Top, where Top is a convenient category of topological spaces. This means that D belongs to a certain oo-topos [31], but the point for now is to notice that D gives in particular a filtration of topological spaces from R_ to Top, by setting X_1 = D([0, l]) and maps X_1 -> X_1 when -l' \u2264 -l, that we can choose to be D(Tro : X_y -> X_1). Hence 29"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 30,
        "page_content": "this filtration looks at a dynamical system on X through, successively, its set of smaller initial paths. Similarly, taking the additive monoid N, the same sheaf construction gives the ordinary category of graphs, and the filtration we have been giving starts with the topological space of maximal length in X, and carries on with paths of smaller length. The persistent homology for these filtrations is an interesting invariant of dynamical systems, and has a metric information induced by the metric on X that we are planning on examining in future work. References [1] Hans-Joachim Baues and Gunther Wirsching. Cohomology of small categories. Journal of Pure and Applied Algebra, 38(2-3):187 - 211, 1985. [2] Richard Bonichon, G\u00e9raud Canet, Lo\u00efc Correnson, Eric Goubault, Emmanuel Haucourt, Michel Hirschowitz, S\u00e9bastien Labb\u00e9, and Samuel Mimram. Rigorous evidence of freedom from concurrency faults in industrial control software. In Francesco Flammini, Sandro Bologna, and Valeria Vittorini, editors, Computer Safety, Reliability, and Security - 30th International Conference, SAFECOMP 2011, Naples, Italy, September 19-22, 2011. Pro- ceedings, volume 6894 of Lecture Notes in Computer Science, pages 85-98. Springer, 2011. [3] Magnus Bakke Botnan, Justin Curry, and Elizabeth Munch. A relative theory of interleav- ings, 2020. [4] Peter Bubenik, Vin de Silva, and Jonathan Scott. Metrics for generalized persistence modules. Foundations of Computational Mathematics, 15(6):1501-1531, oct 2014. [5] Cameron Calk, Eric Goubault, and Philippe Malbos. Time-reversal homotopical properties of concurrent systems. Homology Homotopy Appl., 22(2):31-57, 2020. [6] Gunnar Carlsson. Topology and data. Bull. Amer. Math. Soc. (N.S.), 46(2):255-308, 2009. [7] Gunnar Carlsson and Afra Zomorodian. The theory of multidimensional persistence. Dis- crete Comput. Geom., 42(1):71-93, 2009. [8] Justin Curry, Sayan Mukherjee, and Katharine Turner. How many directions determine a shape and other sufficiency results for two topological transforms, 2021. [9] Jeremy Dubut, Eric Goubault, and Jean Goubault-Larrecq. Natural homology. In Au- tomata, Languages, and Programming - 42nd International Colloquium, ICALP 2015, Ky- oto, Japan, July 6-10, 2015, Proceedings, Part II, pages 171-183, 2015. [10] J\u00e9r\u00e9my Dubut, \u00c9ric Goubault, and Jean Goubault-Larrecq. Directed homology theories and Eilenberg-Steenrod axioms. Applied Categorical Structures, pages 1-33, 2016. [11] Herbert Edelsbrunner and John Harer. Persistent homology-a survey. In Surveys on discrete and computational geometry, volume 453 of Contemp. Math., pages 257-282. Amer. Math. Soc., Providence, RI, 2008. 30"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 31,
        "page_content": "[12] Herbert Edelsbrunner and John L. Harer. Computational topology. American Mathematical Society, Providence, RI, 2010. An introduction. [13] Herbert Edelsbrunner, David Letscher, and Afra Zomorodian. Topological persistence and simplification. volume 28, pages 511-533. 2002. Discrete and computational geometry and graph drawing (Columbia, SC, 2001). [14] Ulrich Fahrenberg. Directed Homology. Electronic Notes in Theoretical Compututer Sci- ence, 100:111-125, 2004. [15] Lisbeth Fajstrup, Eric Goubault, Emmanuel Haucourt, Samuel Mimram, and Martin Rau\u00dfen. Trace spaces: An efficient new technique for state-space reduction. In Helmut Seidl, editor, Programming Languages and Systems - 21st European Symposium on Pro- gramming, ESOP 2012, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2012, Tallinn, Estonia, March 24 - April 1, 2012. Proceed- ings, volume 7211 of Lecture Notes in Computer Science, pages 274-294. Springer, 2012. [16] Lisbeth Fajstrup, Eric Goubault, Emmanuel Haucourt, Samuel Mimram, and Martin Raussen. Directed Algebraic Topology and Concurrency. Springer, 2016. [17] Eric Goubault. G\u00e9om\u00e9trie du parall\u00e9lisme. PhD thesis, Ecole Polytechnique, 1995. [18] Eric Goubault. Geometry and concurrency: a user's guide. Math. Struct. Comput. Sci., 10(4):411-425, 2000. [19] Eric Goubault, Michael Farber, and Aur\u00e9lien Sagnier. Directed topological complexity. J Appl. and Comput. Topology, 4:11-27, 2020. [20] Eric Goubault and Samuel Mimram. Directed Homotopy in non-positively curved spaces. pages 1-55, 2016. [21] \u00c9ric Goubault, Samuel Mimram, and Christine Tasson. Geometric and combinatorial views on asynchronous computability. Distributed Comput., 31(4):289-316, 2018. [22] Marco Grandis. Directed Algebraic Topology, Models of non-reversible worlds. Cambridge University Press, 2009. [23] Marco Grandis. Homological Algebra: In Strongly Non-abelian Settings. World Scientific Publishing Company, 2013. [24] Emmanuel Haucourt. Streams, d-spaces and their fundamental categories. Electron. Notes Theor. Comput. Sci., 283:111-151, 2012. [25] Emmanuel Haucourt. Some Invariants of Directed Topology towards a Theoretical Base for a Static Analyzer Dealing with Fine-Grain Concurrency. Habilitation \u00e0 diriger des recherches, Universit\u00e9 Paris 7 - Denis Diderot, September 2016. [26] M. Herlihy and N. Shavit. The topological structure of asynchronous computability. Journal of the ACM (JACM), 46(6):858-923, 1999. 31"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 32,
        "page_content": "[27] Maurice Herlihy, Dmitry Kozlov, and Sergio Rajsbaum. Distributed Computing Through Combinatorial Topology. Elsevier Science, 2013. [28] Peter Johnstone. A note on discrete conduch\u00e9 fibrations. Theory and Applications of Categories, 5(1):1-11, 1999. [29] Francis William Lawvere. State categories and response functors, 1986. [30] Michael Lesnick and Matthew Wright. Interactive visualization of 2-D persistence modules, 2015. [31] Jacob Lurie. Higher Topos Theory (AM-170). Annals of Mathematics Studies. Princeton University Press, 2009. [32] Martin Raussen. Simplicial models for trace spaces II: General higher dimensional au- tomata. Algebraic and Geometric Topology, 12(3):1741-1762, 2012. [33] Patrick Schultz and David I. Spivak. Temporal type theory: A topos-theoretic approach to systems and behavior, 2017. [34] Patrick Schultz, David I. Spivak, and Christina Vasilakopoulou. Dynamical systems and sheaves, 2019. [35] Krzysztof Ziemianski. Spaces of directed paths on pre-cubical sets. Applicable Algebra in Engineering, Communication and Computing, 28:497-525, 2017. [36] Afra Zomorodian and Gunnar Carlsson. Computing persistent homology. Discrete & Com- putational Geometry, 33(2):249-274, 2005. 32"
    },
    {
        "filename": "2305.03357.pdf",
        "page_number": 33,
        "page_content": "CAMERON CALK cameron.calk@inria.fr ERIC GOUBAULT eric.goubault@polytechnique.edu PHILIPPE MALBOS malbos@math.univ-lyon1.fr \u00c9cole Polytechnique CNRS, Institut Polytechnique de Paris 1 rue Honor\u00e9 d'Estienne d'Orves 91128 Palaiseau, France \u00c9cole Polytechnique CNRS, Institut Polytechnique de Paris 1 rue Honor\u00e9 d'Estienne d'Orves 91128 Palaiseau, France Universit\u00e9 Claude Bernard Lyon 1 CNRS UMR 5208, Institut Camille Jordan 43 Blvd. du 11 novembre 1918 F-69622 Villeurbanne cedex, France - May 8, 2023 - 0:29 - 33"
    }
]